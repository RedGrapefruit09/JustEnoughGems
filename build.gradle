plugins {
    id 'fabric-loom' version '0.12.47'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url = "https://kanpov.github.io/maven"
        content {
            includeGroup "com.redgrapefruit.itemnbt"
        }
    }

    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        url = "https://jitpack.io"
    }

    maven {
        url = "https://maven.terraformersmc.com/releases/com/terraformersmc/modmenu/"
    }

    maven {
        url = "https://maven.shedaniel.me/"
    }

    maven {
        url = "https://maven.terraformersmc.com/releases/"
    }
}

dependencies {
    // Core components
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. Common development hooks and APIs
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    // Fabric Language Kotlin. Kotlin modding support
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.flk_version}"
    // ItemNBT. Item NBT serialization features
    modImplementation "com.redgrapefruit.itemnbt:itemnbt:${project.itemnbt_version}"
    include "com.redgrapefruit.itemnbt:itemnbt:${project.itemnbt_version}"
    // ToolTipFix. A small third-party mod to fix some longer tooltips of this mod.
    // Uses CurseMaven because no official artifact is provided
    modRuntimeOnly "curse.maven:tooltipfix-${project.tooltipfix_pid}:${project.tooltipfix_fid}"
    include "curse.maven:tooltipfix-${project.tooltipfix_pid}:${project.tooltipfix_fid}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}
